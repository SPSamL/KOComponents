import ko from 'knockout';
import Router from './router';
import './binding';
ko.components.register('ko-component-router', {
    synchronous: true,
    viewModel: {
        createViewModel: function (params) { return new Router(unwrapParams(params)); }
    },
    template: "<div data-bind=\"if: component\">\n      <div class=\"ko-component-router-view\" data-bind=\"__ko_component_router__\"></div>\n    </div>"
});
ko.bindingHandlers.__ko_component_router__ = {
    init: function init(el, valueAccessor, allBindings, viewModel, bindingCtx) {
        var $router = bindingCtx.$rawData;
        ko.applyBindingsToNode(el, {
            css: $router.component,
            component: {
                name: $router.component,
                params: $router.ctx
            }
        }, bindingCtx.extend({
            $router: $router
        }));
        return {
            controlsDescendantBindings: true
        };
    }
};
function unwrapParams(params) {
    function unwrapParam(p) {
        if (ko.isObservable(params[p])) {
            console.warn(("\n        [ko-component-router] `params." + p + "` was passed in as an observable.\n        It willbe unwrapped, but changes will NOT be observed.\n    "));
            params[p] = ko.unwrap(params[p]);
        }
    }
    
    unwrapParam('routes');
    unwrapParam('base');
    unwrapParam('hashbang');
    return params;
}

export default Router


